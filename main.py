import time
from random import randint
import asyncio
from config import TOKEN
from aiogram import Bot, Dispatcher, executor, types
import requests
from algorithm import *

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
markup1.add(types.KeyboardButton("–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç"), types.KeyboardButton("–ê–≤—Ç–æ—Ä"), types.KeyboardButton("–ò–≥—Ä–∞—Ç—å"))
helpmsg = "<b>–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:</b>\n\n<b>/roll</b> - –ò–≥—Ä–∞—Ç—å –≤ —Ä—É–ª–µ—Ç–∫—É (–¢–∞–∫–∂–µ –µ—Å—Ç—å –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ)\n\n<b>/orlanka</b> - –ò–≥—Ä–∞—Ç—å –≤ –æ—Ä–ª—è–Ω–∫—É (–æ—Ä—ë–ª –∏–ª–∏ —Ä–µ—à–∫–∞)\n\n<b>/dice</b> - –ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏\n\n<b>/fact</b> - –°–ª—É—á–∞–Ω—ã–π —Ñ–∞–∫—Ç –ø—Ä–æ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ (–¢–∞–∫–∂–µ –µ—Å—Ç—å –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ)\n\n<b>/disclaimer</b> - –û—Ç–∫–∞–∑ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏\n\n<b>/author</b> - –ê–≤—Ç–æ—Ä –±–æ—Ç–∞ (–¢–∞–∫–∂–µ –µ—Å—Ç—å –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ)\n\n<b>/ping</b> - –ü–æ–Ω–≥!\n\n<b>/keyboard</b> - –û—Ç–∫—Ä—ã—Ç—å –∑–∞–Ω–æ–≤–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∏–≥—Ä—ã\n\n<b>/rm_keyboard</b> - –ó–∞–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É. –ü–æ–ª–µ–∑–Ω–æ –≤ –≥—Ä—É–ø–ø–∞—Ö\n\n<b>/help</b> - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã"

print(r"   ____                   ____              __     __  __            ____        __ ")
print(r"  / __ \____  ___  ____  / __ \____  __  __/ /__  / /_/ /____       / __ )____  / /_")
print(r" / / / / __ \/ _ \/ __ \/ /_/ / __ \/ / / / / _ \/ __/ __/ _ \     / __  / __ \/ __/")
print(r"/ /_/ / /_/ /  __/ / / / _, _/ /_/ / /_/ / /  __/ /_/ /_/  __/    / /_/ / /_/ / /_  ")
print(r"\____/ .___/\___/_/ /_/_/ |_|\____/\__,_/_/\___/\__/\__/\___/    /_____/\____/\__/   by @anton165")
print(r"    /_/                                                                             ")


async def log(text):
    print(text)
    with open('log.txt', 'a', encoding="utf-8") as file:
        file.write(f"\n{text}")


def randomorg_parse(number):
    site = requests.get(f'https://www.random.org/integers/?num=1&min=1&max={number}&col=1&base=10&format=plain&rnd=new')
    randomorg_string = int("".join(c for c in site.text if c.isdecimal()))
    return randomorg_string


@dp.message_handler(commands=["start"])
async def start(message):
    await log(f"--------------------\n{time.ctime()}\n{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} id={message.from_user.id}\n{message.chat.title} {message.chat.invite_link} id = {message.chat.id}\n-")
    await log("–ó–∞–ø—Ä–æ—à–µ–Ω —Å—Ç–∞—Ä—Ç")

    send_mess = f"<b>–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –í —ç—Ç–æ–º –±–æ—Ç–µ —Ç—ã —Å–º–æ–∂–µ—à—å –∫—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É.</b>"
    await bot.send_message(message.chat.id, send_mess, parse_mode="html")

    send_mess = "<b>–ü–æ—Å–∫–æ–ª—å–∫—É –±–æ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –æ–Ω –Ω–µ —Ö–æ—Å—Ç–∏—Ç—Å—è –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ. –ò–∑-–∑–∞ —ç—Ç–æ–≥–æ —è –Ω–µ –º–æ–≥—É –¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ –≤–∫–ª—é—á—ë–Ω–Ω—ã–º 24/7. –ü—Ä–∏–Ω–æ—à—É —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è!</b>"
    await bot.send_message(message.chat.id, send_mess, parse_mode="html")

    send_mess = "<b>–í–∞–∂–Ω–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –≥—Ä—É–ø–ø: </b>\n–£ –±–æ—Ç–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º –≤ –≥—Ä—É–ø–ø–∞—Ö –Ω–∞ —É—Ä–æ–≤–Ω–µ Telegram API. –û–Ω –Ω–µ —Å–º–æ–∂–µ—Ç –∑–∞ –≤–∞–º–∏ –ø–æ–¥–≥–ª—è–¥—ã–≤–∞—Ç—å :)\n<b><a href='https://core.telegram.org/bots#privacy-mode'>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a></b>"
    await bot.send_message(message.chat.id, send_mess, parse_mode="html", disable_web_page_preview=True)

    send_mess = helpmsg + "\n\n\n<b>–ò–ª–∏ –ø–æ–ª—å–∑—É–π—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Å –∫–Ω–æ–ø–∫–∞–º–∏:</b>"
    await bot.send_message(message.chat.id, send_mess, parse_mode="html")

    send_mess = "<b>–£–¥–∞—á–∏!</b>"
    await bot.send_message(message.chat.id, send_mess, parse_mode="html", reply_markup=markup1)

    await log("–°—Ç–∞—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")


@dp.message_handler(commands=["roll"])
async def roll(message):
    await log(f"--------------------\n{time.ctime()}\n{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} id={message.from_user.id}\n{message.chat.title} {message.chat.invite_link} id = {message.chat.id}\n-")
    send_mess = "<b>–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç random.org</b>"
    roll_mess = await bot.send_message(message.chat.id, send_mess, parse_mode="html", disable_web_page_preview=True)
    gamecode = randint(100, 999)
    await log(f"{gamecode} - –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ random.org...")

    rnd = randomorg_parse(37)
    result = fun_result(rnd)
    await log(f"{gamecode} - –†–µ–∑—É–ª—å—Ç–∞—Ç - {result}.")
    await bot.edit_message_text(chat_id=message.chat.id, message_id=roll_mess.message_id, text=f"<b>{message.from_user.first_name}, –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n{result}</b>", parse_mode="html", disable_web_page_preview=True)
    await log(f"{gamecode} - –ì–æ—Ç–æ–≤–æ.")


@dp.message_handler(commands=["ping"])
async def ping(message):
    await log(f"--------------------\n{time.ctime()}\n{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} id={message.from_user.id}\n{message.chat.title} {message.chat.invite_link} id = {message.chat.id}\n-")
    await log("–ü–∏–Ω–≥?")
    send_mess = f"<b>–ü–æ–Ω–≥! –Ø –∂–∏–≤!</b>"
    await bot.send_message(message.chat.id, send_mess, parse_mode="html")
    await log("–ü–æ–Ω–≥!")


@dp.message_handler(commands=["disclaimer"])
async def disclaimer(message):
    await log(f"--------------------\n{time.ctime()}\n{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} id={message.from_user.id}\n{message.chat.title} {message.chat.invite_link} id = {message.chat.id}\n-")
    await log("–ó–∞–ø—Ä–æ—à–µ–Ω –¥–∏—Å–∫–ª–µ–π–º–µ—Ä.")
    send_mess = "<b>–î–ò–°–ö–õ–ï–ô–ú–ï–† (–û–¢–ö–ê–ó –û–¢ –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–ò): </b>–Ø –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–∞–∑—ã–≤–∞—é—Å—å –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è " \
                "–¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –Ω–µ –≤ —Ü–µ–ª—è—Ö —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è. –ë–æ—Ç —Å–æ–∑–¥–∞–Ω –Ω–µ –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Ü–µ–ª—è—Ö, –∏ –Ω–∏–∫–æ–≥–¥–∞ —Ç–∞–∫–∏–º –Ω–µ " \
                "—Å—Ç–∞–Ω–µ—Ç!\n\n<b>–ö–æ—Ä–æ—Ç–∫–æ:</b> –°—Ç–∞–≤–æ–∫ –Ω–µ—Ç."
    await bot.send_message(message.chat.id, send_mess, parse_mode="html")
    await log("–î–∏—Å–∫–ª–µ–π–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")


@dp.message_handler(commands=["author"])
async def author(message):
    await log(f"--------------------\n{time.ctime()}\n{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} id={message.from_user.id}\n{message.chat.title} {message.chat.invite_link} id = {message.chat.id}\n-")
    await log("–ó–∞–ø—Ä–æ—à–µ–Ω –∞–≤—Ç–æ—Ä.")
    send_mess = f"<b>üßëüèª‚Äçüíª –ú–æ–π –∞–≤—Ç–æ—Ä - @anton165\n–ï–º—É –º–æ–∂–Ω–æ –¥–∞–≤–∞—Ç—å –∏–¥–µ–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤ –±–æ—Ç–µ.</b>"
    await bot.send_message(message.chat.id, send_mess, parse_mode="html")
    await log("–ê–≤—Ç–æ—Ä –∑–∞—Å–ª–∞–Ω)")


@dp.message_handler(commands=["keyboard"])
async def keyboard(message):
    await log(f"--------------------\n{time.ctime()}\n{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} id={message.from_user.id}\n{message.chat.title} {message.chat.invite_link} id = {message.chat.id}\n-")
    await log("–ó–∞–ø—Ä–æ—à–µ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã!")
    send_mess = f"<b>–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–∞!</b>"
    await bot.send_message(message.chat.id, send_mess, parse_mode="html", reply_markup=markup1)
    await log("–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–∞.")


@dp.message_handler(commands=['rm_keyboard'])
async def rm_keyboard(message):
    await log("–ó–∞–ø—Ä–æ—à–µ–Ω–æ –∑–∞–∫—Ä—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã!")
    send_mess = f"<b>–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–∫—Ä—ã—Ç–∞!</b>"
    await bot.send_message(message.chat.id, send_mess, parse_mode="html", reply_markup=types.ReplyKeyboardRemove())
    await log("–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–∫—Ä—ã—Ç–∞.")


@dp.message_handler(commands=["orlanka"])
async def orlanka(message):
    await log(f"--------------------\n{time.ctime()}\n{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} id={message.from_user.id}\n{message.chat.title} {message.chat.invite_link} id = {message.chat.id}\n-")
    gamecode = randint(10, 99)
    send_mess = "<b>–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç random.org</b>"
    oreshka_mess = await bot.send_message(message.chat.id, send_mess, parse_mode="html", disable_web_page_preview=True)
    await log(f"{gamecode} - –ó–∞–ø—Ä–æ—à–µ–Ω–∞ –æ—Ä–ª—è–Ω–∫–∞.")
    oreshka = randomorg_parse(2)

    resultoreshka = "–û—à–∏–±–∫–∞. –í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ random.org"
    if oreshka == 1:
        await log(f"{gamecode} - –í—ã–ø–∞–ª –æ—Ä—ë–ª. –û—Ç–ø—Ä–∞–≤–ª—è—é...")
        resultoreshka = "–û—Ä—ë–ª"
    else:
        if oreshka == 2:
            await log(f"{gamecode} - –í—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞. –û—Ç–ø—Ä–∞–≤–ª—è—é...")
            resultoreshka = "–†–µ—à–∫–∞"

    await bot.edit_message_text(chat_id=message.chat.id, message_id=oreshka_mess.message_id, text=f"<b>{message.from_user.first_name}, –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n{resultoreshka}.</b>", parse_mode="html")
    await log("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")


@dp.message_handler(commands=["dice"])
async def dice(message):
    await log(f"--------------------\n{time.ctime()}\n{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} id={message.from_user.id}\n{message.chat.title} {message.chat.invite_link} id = {message.chat.id}\n-")
    gamecode = randint(10, 99)
    dice_sleep = 3
    await log(f"{gamecode} - –ó–∞–ø—Ä–æ—à–µ–Ω –¥–∞–π—Å.")
    dice_message = await bot.send_dice(message.chat.id, emoji="üé≤")
    await log(f"{gamecode} - –ü–æ–¥–∫–∏–Ω—É–ª. –†–µ–∑—É–ª—å—Ç–∞—Ç: {dice_message.dice.value}. –ñ–¥—ë–º {dice_sleep} —Å–µ–∫...")
    send_mess = f"<b>–ü–æ–∂–∞–ª–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ..</b>"
    dice_comment_message = await bot.send_message(message.chat.id, send_mess, parse_mode="html")

    dice_emoji = ""
    if dice_message.dice.value == 1:
        dice_emoji = "‚öÄ"
    else:
        if dice_message.dice.value == 2:
            dice_emoji = "‚öÅ"
        else:
            if dice_message.dice.value == 3:
                dice_emoji = "‚öÇ"
            else:
                if dice_message.dice.value == 4:
                    dice_emoji = "‚öÉ"
                else:
                    if dice_message.dice.value == 5:
                        dice_emoji = "‚öÑ"
                    else:
                        if dice_message.dice.value == 6:
                            dice_emoji = "‚öÖ"

    await asyncio.sleep(dice_sleep)
    await bot.edit_message_text(chat_id=message.chat.id, message_id=dice_comment_message.message_id, text=f"<b>{message.from_user.first_name}, –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n{dice_emoji} {dice_message.dice.value}</b>", parse_mode="html")
    await log(f"{gamecode} - –ì–æ—Ç–æ–≤–æ.")


@dp.message_handler(commands=["fact"])
async def fact(message):
    await log(f"--------------------\n{time.ctime()}\n{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} id={message.from_user.id}\n{message.chat.title} {message.chat.invite_link} id = {message.chat.id}\n-")
    await log("–ó–∞–ø—Ä–æ—à–µ–Ω —Ñ–∞–∫—Ç.")
    howmanyfacts = 5
    send_fact_mess = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!"
    rnd_fact = randint(1, howmanyfacts)

    if rnd_fact == 1:
        send_fact_mess = f"–î–∞–Ω–Ω—ã–π –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è FOSS –ø—Ä–æ–µ–∫—Ç–æ–º. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –µ–≥–æ <a href='github.com/KUKURUZKA165/roulette-telegram-bot'>–∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥</a> –æ—Ç–∫—Ä—ã—Ç –≤—Å–µ–º –∂–µ–ª–∞—é—â–∏–º. –õ—é–±–æ–π –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ—Å—Ç–Ω–æ—Å—Ç—å –µ–≥–æ —Ä–∞–±–æ—Ç—ã :)"
    else:
        if rnd_fact == 2:
            send_fact_mess = f"–°–ª—É—á–∞–π–Ω–æ—Å—Ç—å –≤ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–π —à—É–º (random.org). –°–æ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –Ω–µ —Å–ø–æ—Å–æ–±–Ω—ã –ø—Ä–µ–¥—É–≥–∞–¥–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞—à–µ–π –∏–≥—Ä—ã."
        else:
            if rnd_fact == 3:
                send_fact_mess = f"–ë–æ—Ç –∑–Ω–∞–µ—Ç —Ç–æ–ª—å–∫–æ {howmanyfacts} —Ñ–∞–∫—Ç–æ–≤ –æ —Å–µ–±–µ. –û–Ω –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç —Ñ–∞–∫—Ç—ã —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∏ –æ—Ç–ø—Ä–∞–≤—è–µ—Ç –≤–∞–º."
            else:
                if rnd_fact == 4:
                    send_fact_mess = f"–≠—Ç–æ—Ç —Ñ–∞–∫—Ç –µ—â—ë –Ω–µ –ø—Ä–∏–¥—É–º–∞–ª–∏."
                else:
                    if rnd_fact == 5:
                        send_fact_mess = f"–î–∞–∂–µ –µ—Å–ª–∏ –±—ã –≤—Å–µ –∫–∞–∑–∏–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ç–∞–∫–æ–π –∂–µ —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª, –∫–∞–∫ —É –Ω–∞—Å, –æ–Ω–∏ –±—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –≤–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ –æ—Å—Ç–∞–≤–∞–ª–∏—Å—å –≤ –ø–ª—é—Å–µ."

    await bot.send_message(message.chat.id, "<b>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</b>\n" + send_fact_mess, parse_mode="html", disable_web_page_preview=True)

    await log(f"–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–∞–∫—Ç {rnd_fact} –∏–∑ {howmanyfacts}. –ï–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:\n{send_fact_mess}")


@dp.message_handler(commands=["help"])
async def help_command(message):
    await log(f"--------------------\n{time.ctime()}\n{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} id={message.from_user.id}\n{message.chat.title} {message.chat.invite_link} id = {message.chat.id}\n-")
    await log("–ó–∞–ø—Ä–æ—à–µ–Ω–∞ –ø–æ–º–æ—â—å")
    send_mess = helpmsg
    await bot.send_message(message.chat.id, send_mess, parse_mode="html")
    await log("–ì–æ—Ç–æ–≤–æ")


@dp.message_handler(content_types=["text"])
async def mess(message):
    get_message_bot = message.text.strip().lower()

    if get_message_bot == "–∏–≥—Ä–∞—Ç—å":
        await roll(message)
    else:
        if get_message_bot == "–∞–≤—Ç–æ—Ä":
            await author(message)
        else:
            if get_message_bot == "—Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç":
                await fact(message)
            else:
                await log(f"--------------------\n{time.ctime()}\n{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username} id={message.from_user.id}\n{message.chat.title} {message.chat.invite_link} id = {message.chat.id}\n-\n–ü—Ä–∏—Å–ª–∞–ª(–∞): {message.text}")
                if message.from_user.id == message.chat.id:
                    send_mess = f"<b>–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª :(</b>"
                    await bot.send_message(message.chat.id, send_mess, parse_mode="html")
                    await log("–û—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —è –µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª")


print(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")

if __name__ == '__main__':
    executor.start_polling(dp)
